d3.select("#someDiv").style("border", "5px darkgray dashed"); -> appearance
d3.select("#someDiv").attr("id", "newID"); -> include classes, IDs, and interactive behaviors
d3.select("#someCheckbox").property("checked", true); -> states such as "checked" property for check box 

------------------------------------------------------------------------------
<canvas>
Element to draw bitmaps. Canvas elements creates static graphics drawn in a manner familiar with svg that can then be saved as images.
Reasons to use canvas:

* Creatring static images -> You can draw your data visualization with canvas to save views as snapshots for thumbnails and gallery views

* Large amounts of data -> SVG creates individiul elementsin the DOM, which can overwhelm a browser and cause significan slowdown

WebGL-The <canvas> element allows you to use WebGL to draw, so that you can creatre 3D objects. 

------------------------------------------------------------------------------
SVG 

Provide a set of common shapes, <rect> <circle> <line> <ellipse> <polygon>

<g> -> or group element it has not graphical representation and doesn't exist as a bounded space. you'll want to use <g> elements extensively when creating graphical objects that are made up of several shapes and text. For instance, if you want to create a circle with a label obove it and move the circle and the label at the same timem, then you'd place them inside a <g> element.

Moving <g> elements with -> translate() which accepts a pair of coordinates that move the element to the xy position defined by the values in translate (x,y) 

the transform attribute also accepts a -> sacale() so that you can change the render scale
------------------------------------------------------------------------------
<g>   
	<circle r="2"/>   
	<text>This circle's Label</text>
</g>

<g transform="translate(100,50)">   
	<circle r="2" />   
	<text>This circle's Label</text>
</g>

<g transform="translate(100,400) scale(2.5)">   
	<circle r="2"/>   
	<text>This circle's Label</text>
</g>
------------------------------------------------------------------------------


<path> -> is an area determine by its d attribute 

------------------------------------------------------------------------------
<path style="fill:none;stroke:gray;stroke-width:4px;"     
	d="M 10,60 40,30 50,50 60,30 70,80" transform="translate(0,0)" />

<path style="fill:black;stroke:gray;stroke-width:4px;"     
	d="M 10,60 40,30 50,50 60,30 70,80" transform="translate(0,100)" />

<path style="fill:none;stroke:gray;stroke-width:4px;"     
	d="M 10,60 40,30 50,50 60,30 70,80Z" transform="translate(0,200)" />

<path style="fill:black;stroke:gray;stroke-width:4px;"     
	d="M 10,60 40,30 50,50 60,30 70,80Z" transform="translate(0,300)" />
------------------------------------------------------------------------------

CSS

You can use css to style 
------------------------------------------------------------------------------
<body>                                              
	<div id="infovizDiv">  
		<svg style="width:500px;height:500px;border:1px lightgray solid;">    
			<path d="M 10,60 40,30 50,50 60,30 70,80" />   
			<polygon class="inactive" points="80,400 120,400 160,440 120,480 60,460" />  	
			<g>  
			 	<circle class="active tentative" cy="100" cx="200" r="30"/>  
			 	<rect class="active" x="410" y="200" width="100" height="50" />  
			</g>  
		</svg> 
	</div>
</body>
-------------------------------------------------------------------------------

JavaScript

when writing Javascript with D3 you should familiarize yourself with two subjects:
method chaining and arrays.
-------------------------------------------------------------------------------
d3.selectAll("div").data(someData).enter().append("div").html("Wow").append("span").html("Even More Wow").style("font-weight", "900");
-------------------------------------------------------------------------------
d3.selectAll("div")                       	1  
	.data(someData)                           2  
	.enter()                                  3  
	.append("div")                            4  
	.html("Wow")                              5  
	.append("span")                           6  
	.html("Even More Wow")                    7  
	.style("font-weight", "900");     				8
-------------------------------------------------------------------------------
1. Return a seclection, an object with various functions available
2. Sets the data on the selection and returns the selection 
3. Returns the selection.enter() object 
4. Sets .append() behavior on the selection.enter object and returns 
	the selection.enter object 
5. Set .html() for the selection.enter object and retunrs the selection.enter object
6. Sets the append() behavior on the selection.enter object and returns the enter.append object
7. Sets the html() for the enter.append object and returns the enter.append object
8. Sets tje fonr-wieght style on the enter.append object and returns the enter,append object










